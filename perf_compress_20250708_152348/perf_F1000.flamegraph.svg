<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >SPECjvm2008 compress â 1000 Hz / 180 s</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>GCTaskThread::run (9,497,691,160 samples, 0.34%)</title><rect x="1185.7" y="485" width="4.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1188.68" y="495.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="437" width="1175.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="13.17" y="447.5" >JavaCalls::call_virtual</text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (279,807,191 samples, 0.01%)</title><rect x="1185.5" y="501" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1188.47" y="511.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,283,850,372 samples, 0.05%)</title><rect x="797.9" y="245" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="800.86" y="255.5" ></text>
</g>
<g >
<title>start_thread (557,827,057 samples, 0.02%)</title><rect x="1189.8" y="517" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.76" y="527.5" ></text>
</g>
<g >
<title>update_process_times (5,621,468,402 samples, 0.20%)</title><rect x="1162.6" y="181" width="2.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1165.63" y="191.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (335,253,940 samples, 0.01%)</title><rect x="1165.6" y="277" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1168.63" y="287.5" ></text>
</g>
<g >
<title>usb_submit_urb (256,309,565 samples, 0.01%)</title><rect x="1157.4" y="117" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1160.39" y="127.5" ></text>
</g>
<g >
<title>BenchmarkThread (2,764,661,292,548 samples, 99.60%)</title><rect x="10.0" y="533" width="1175.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >BenchmarkThread</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,442,855,149 samples, 0.05%)</title><rect x="797.9" y="261" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="800.86" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,208,991,966 samples, 0.15%)</title><rect x="1157.7" y="261" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1160.66" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_enable (359,699,784 samples, 0.01%)</title><rect x="798.2" y="101" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="801.16" y="111.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method (277,047,194 samples, 0.01%)</title><rect x="1185.3" y="453" width="0.2" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1188.34" y="463.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,131,105,348 samples, 0.26%)</title><rect x="1162.2" y="261" width="3.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1165.18" y="271.5" ></text>
</g>
<g >
<title>__futex_wait (238,204,695 samples, 0.01%)</title><rect x="10.0" y="389" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="13.02" y="399.5" ></text>
</g>
<g >
<title>_new_array_Java (1,318,924,811 samples, 0.05%)</title><rect x="1160.7" y="293" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1163.69" y="303.5" ></text>
</g>
<g >
<title>wake_up_process (243,256,469 samples, 0.01%)</title><rect x="1162.4" y="197" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1165.36" y="207.5" ></text>
</g>
<g >
<title>xhci_queue_bulk_tx (252,759,211 samples, 0.01%)</title><rect x="1157.4" y="53" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1160.39" y="63.5" ></text>
</g>
<g >
<title>PSScavenge::invoke (336,018,425 samples, 0.01%)</title><rect x="1189.9" y="389" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1192.86" y="399.5" ></text>
</g>
<g >
<title>perf_event_task_tick (777,437,294 samples, 0.03%)</title><rect x="798.0" y="133" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="800.99" y="143.5" ></text>
</g>
<g >
<title>hid_irq_in (291,890,145 samples, 0.01%)</title><rect x="1157.4" y="133" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1160.37" y="143.5" ></text>
</g>
<g >
<title>do_futex (251,279,633 samples, 0.01%)</title><rect x="10.0" y="421" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.02" y="431.5" ></text>
</g>
<g >
<title>pkg_thermal_notify (1,601,975,043 samples, 0.06%)</title><rect x="1159.8" y="213" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1162.83" y="223.5" ></text>
</g>
<g >
<title>perf_event_task_tick (4,047,149,573 samples, 0.15%)</title><rect x="1162.9" y="149" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1165.90" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,269,244,997 samples, 0.05%)</title><rect x="797.9" y="229" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="800.87" y="239.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (395,325,549 samples, 0.01%)</title><rect x="1157.3" y="149" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1160.33" y="159.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (444,106,679 samples, 0.02%)</title><rect x="798.6" y="165" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="801.60" y="175.5" ></text>
</g>
<g >
<title>start_thread (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="517" width="1175.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.17" y="527.5" >start_thread</text>
</g>
<g >
<title>tick_sched_handle (5,648,755,120 samples, 0.20%)</title><rect x="1162.6" y="197" width="2.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1165.62" y="207.5" ></text>
</g>
<g >
<title>irq_exit_rcu (822,221,477 samples, 0.03%)</title><rect x="1161.5" y="261" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1164.55" y="271.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (822,221,477 samples, 0.03%)</title><rect x="1161.5" y="245" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1164.55" y="255.5" ></text>
</g>
<g >
<title>[unknown] (330,310,832 samples, 0.01%)</title><rect x="10.0" y="517" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>Lspec/harness/BenchmarkThread:::runLoop (2,764,245,286,188 samples, 99.59%)</title><rect x="10.2" y="357" width="1175.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="13.18" y="367.5" >Lspec/harness/BenchmarkThread:::runLoop</text>
</g>
<g >
<title>thread_entry (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="469" width="1175.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="13.17" y="479.5" >thread_entry</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (1,529,358,441 samples, 0.06%)</title><rect x="1159.8" y="181" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1162.84" y="191.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (256,309,565 samples, 0.01%)</title><rect x="1157.4" y="85" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1160.39" y="95.5" ></text>
</g>
<g >
<title>sysvec_thermal (4,182,738,345 samples, 0.15%)</title><rect x="1165.8" y="277" width="1.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1168.80" y="287.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (310,302,758 samples, 0.01%)</title><rect x="1161.4" y="213" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1164.41" y="223.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Main:::harnessMain (2,764,026,684,075 samples, 99.58%)</title><rect x="10.2" y="341" width="1175.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="13.20" y="351.5" >Lspec/benchmarks/compress/Main:::harnessMain</text>
</g>
<g >
<title>common_interrupt (641,955,783 samples, 0.02%)</title><rect x="1157.2" y="261" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1160.24" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1,829,571,195 samples, 0.07%)</title><rect x="1163.8" y="117" width="0.8" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1166.82" y="127.5" ></text>
</g>
<g >
<title>CardTableExtension::scavenge_contents_parallel (826,798,025 samples, 0.03%)</title><rect x="1185.7" y="453" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1188.74" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (829,887,803 samples, 0.03%)</title><rect x="1158.5" y="69" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1161.54" y="79.5" ></text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (811,376,137 samples, 0.03%)</title><rect x="1161.6" y="197" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1164.55" y="207.5" ></text>
</g>
<g >
<title>VM_Operation::evaluate (336,018,425 samples, 0.01%)</title><rect x="1189.9" y="437" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.86" y="447.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (243,256,469 samples, 0.01%)</title><rect x="1162.4" y="213" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1165.36" y="223.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (2,689,128,308 samples, 0.10%)</title><rect x="1166.3" y="197" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1169.29" y="207.5" ></text>
</g>
<g >
<title>__schedule (264,937,770 samples, 0.01%)</title><rect x="1165.7" y="213" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1168.65" y="223.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (761,923,054 samples, 0.03%)</title><rect x="798.0" y="117" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="800.99" y="127.5" ></text>
</g>
<g >
<title>java_start (293,865,505 samples, 0.01%)</title><rect x="1185.3" y="501" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1188.34" y="511.5" ></text>
</g>
<g >
<title>intel_thermal_interrupt (4,143,118,454 samples, 0.15%)</title><rect x="1165.8" y="245" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1168.80" y="255.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (359,699,784 samples, 0.01%)</title><rect x="798.2" y="85" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="801.16" y="95.5" ></text>
</g>
<g >
<title>SpinPause (4,754,890,066 samples, 0.17%)</title><rect x="1187.3" y="453" width="2.0" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="1190.32" y="463.5" ></text>
</g>
<g >
<title>native_read_msr (378,950,321 samples, 0.01%)</title><rect x="1159.6" y="213" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1162.56" y="223.5" ></text>
</g>
<g >
<title>VM_ParallelGCFailedAllocation::doit (336,018,425 samples, 0.01%)</title><rect x="1189.9" y="421" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.86" y="431.5" ></text>
</g>
<g >
<title>__common_interrupt (335,077,998 samples, 0.01%)</title><rect x="1161.4" y="261" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1164.41" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1,529,358,441 samples, 0.06%)</title><rect x="1159.8" y="197" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1162.84" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,443,487,439 samples, 0.12%)</title><rect x="1157.7" y="213" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1160.67" y="223.5" ></text>
</g>
<g >
<title>usb_giveback_urb_bh (398,795,588 samples, 0.01%)</title><rect x="1157.3" y="165" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1160.33" y="175.5" ></text>
</g>
<g >
<title>irq_exit_rcu (367,682,199 samples, 0.01%)</title><rect x="1165.2" y="261" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1168.22" y="271.5" ></text>
</g>
<g >
<title>update_load_avg (241,359,934 samples, 0.01%)</title><rect x="1159.0" y="117" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1161.98" y="127.5" ></text>
</g>
<g >
<title>PSRootsClosure&lt;false&gt;::do_oop (516,314,113 samples, 0.02%)</title><rect x="1189.4" y="405" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1192.45" y="415.5" ></text>
</g>
<g >
<title>handle_softirqs (818,446,087 samples, 0.03%)</title><rect x="1161.6" y="229" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1164.55" y="239.5" ></text>
</g>
<g >
<title>PSPromotionManager::drain_stacks_depth (2,036,937,567 samples, 0.07%)</title><rect x="1186.4" y="453" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1189.38" y="463.5" ></text>
</g>
<g >
<title>schedule (264,937,770 samples, 0.01%)</title><rect x="1165.7" y="229" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1168.65" y="239.5" ></text>
</g>
<g >
<title>ObjectStartArray::object_starts_in_range (279,166,036 samples, 0.01%)</title><rect x="1186.1" y="453" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1189.09" y="463.5" ></text>
</g>
<g >
<title>[unknown] (328,042,206 samples, 0.01%)</title><rect x="1185.5" y="517" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1188.47" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (447,733,712 samples, 0.02%)</title><rect x="798.6" y="197" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="801.60" y="207.5" ></text>
</g>
<g >
<title>task_tick_fair (438,878,800 samples, 0.02%)</title><rect x="1158.9" y="133" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1161.91" y="143.5" ></text>
</g>
<g >
<title>frame::oops_do_internal (554,419,672 samples, 0.02%)</title><rect x="1189.4" y="437" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1192.44" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,067,102,081 samples, 0.25%)</title><rect x="1162.2" y="245" width="3.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1165.20" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (956,454,167 samples, 0.03%)</title><rect x="798.0" y="149" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="800.97" y="159.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Decompressor:::decompress (850,959,081,258 samples, 30.66%)</title><rect x="798.9" y="293" width="361.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="801.86" y="303.5" >Lspec/benchmarks/compress/Decompressor:::decompress</text>
</g>
<g >
<title>updateBytesCRC32 (13,551,536,749 samples, 0.49%)</title><rect x="1179.5" y="309" width="5.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1182.48" y="319.5" ></text>
</g>
<g >
<title>irqentry_exit (380,403,783 samples, 0.01%)</title><rect x="1165.4" y="261" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1168.38" y="271.5" ></text>
</g>
<g >
<title>x64_sys_call (252,798,877 samples, 0.01%)</title><rect x="10.0" y="453" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.02" y="463.5" ></text>
</g>
<g >
<title>OldToYoungRootsTask::do_it (1,112,823,007 samples, 0.04%)</title><rect x="1185.7" y="469" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1188.74" y="479.5" ></text>
</g>
<g >
<title>start_thread (9,520,902,519 samples, 0.34%)</title><rect x="1185.7" y="517" width="4.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.68" y="527.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1,811,859,543 samples, 0.07%)</title><rect x="1163.8" y="101" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1166.83" y="111.5" ></text>
</g>
<g >
<title>usb_giveback_urb_bh (761,507,489 samples, 0.03%)</title><rect x="1161.6" y="181" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1164.57" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_thermal (4,255,059,657 samples, 0.15%)</title><rect x="1165.8" y="293" width="1.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1168.77" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (2,636,677,626 samples, 0.09%)</title><rect x="1158.0" y="149" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1161.00" y="159.5" ></text>
</g>
<g >
<title>intel_thermal_interrupt (2,312,783,251 samples, 0.08%)</title><rect x="1159.6" y="229" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1162.56" y="239.5" ></text>
</g>
<g >
<title>VMThread::run (557,827,057 samples, 0.02%)</title><rect x="1189.8" y="485" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1192.76" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (261,355,855 samples, 0.01%)</title><rect x="1185.5" y="485" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.47" y="495.5" ></text>
</g>
<g >
<title>all (2,775,680,389,370 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,971,622,289 samples, 0.29%)</title><rect x="1162.2" y="277" width="3.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1165.17" y="287.5" ></text>
</g>
<g >
<title>ThreadRootsTask::do_it (728,576,166 samples, 0.03%)</title><rect x="1189.4" y="469" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1192.39" y="479.5" ></text>
</g>
<g >
<title>StringTable::unlink_or_oops_do (248,390,441 samples, 0.01%)</title><rect x="1189.9" y="357" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1192.89" y="367.5" ></text>
</g>
<g >
<title>arrayof_jint_fill (2,072,340,006 samples, 0.07%)</title><rect x="660.7" y="277" width="0.9" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="663.69" y="287.5" ></text>
</g>
<g >
<title>OopMapSet::oops_do (543,401,534 samples, 0.02%)</title><rect x="1189.4" y="421" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.44" y="431.5" ></text>
</g>
<g >
<title>intel_thermal_interrupt (734,975,593 samples, 0.03%)</title><rect x="798.5" y="229" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="801.51" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (257,792,582 samples, 0.01%)</title><rect x="1185.5" y="469" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1188.47" y="479.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (3,945,679,690 samples, 0.14%)</title><rect x="1162.9" y="133" width="1.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1165.92" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,054,981,010 samples, 0.04%)</title><rect x="797.9" y="181" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="800.93" y="191.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C (1,300,784,327 samples, 0.05%)</title><rect x="1160.7" y="277" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1163.69" y="287.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1,974,086,911 samples, 0.07%)</title><rect x="1158.1" y="117" width="0.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1161.05" y="127.5" ></text>
</g>
<g >
<title>handle_edge_irq (331,436,799 samples, 0.01%)</title><rect x="1161.4" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1164.41" y="255.5" ></text>
</g>
<g >
<title>handle_irq_event (314,365,628 samples, 0.01%)</title><rect x="1161.4" y="229" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1164.41" y="239.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Compress:::performAction (2,722,453,465,181 samples, 98.08%)</title><rect x="10.3" y="309" width="1157.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="13.32" y="319.5" >Lspec/benchmarks/compress/Compress:::performAction</text>
</g>
<g >
<title>native_read_msr_safe (252,579,972 samples, 0.01%)</title><rect x="1166.2" y="213" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1169.18" y="223.5" ></text>
</g>
<g >
<title>native_write_msr (1,793,861,528 samples, 0.06%)</title><rect x="1163.8" y="85" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1166.84" y="95.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="453" width="1175.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="13.17" y="463.5" >JavaCalls::call_virtual</text>
</g>
<g >
<title>update_load_avg (412,229,254 samples, 0.01%)</title><rect x="1164.8" y="133" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1167.75" y="143.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (358,917,878 samples, 0.01%)</title><rect x="1165.4" y="245" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1168.38" y="255.5" ></text>
</g>
<g >
<title>Interpreter (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="389" width="1175.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="13.17" y="399.5" >Interpreter</text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop (293,865,505 samples, 0.01%)</title><rect x="1185.3" y="469" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1188.34" y="479.5" ></text>
</g>
<g >
<title>hid_irq_in (527,510,189 samples, 0.02%)</title><rect x="1161.7" y="149" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1164.67" y="159.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1,228,978,910 samples, 0.04%)</title><rect x="1161.4" y="293" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1164.41" y="303.5" ></text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (288,155,537 samples, 0.01%)</title><rect x="10.0" y="501" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.01" y="511.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (496,149,981 samples, 0.02%)</title><rect x="1189.5" y="389" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.45" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (3,036,262,095 samples, 0.11%)</title><rect x="1157.8" y="197" width="1.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1160.84" y="207.5" ></text>
</g>
<g >
<title>xhci_queue_intr_tx (252,759,211 samples, 0.01%)</title><rect x="1157.4" y="69" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1160.39" y="79.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner (293,865,505 samples, 0.01%)</title><rect x="1185.3" y="485" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1188.34" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (383,734,827 samples, 0.01%)</title><rect x="1165.6" y="293" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1168.61" y="303.5" ></text>
</g>
<g >
<title>Interpreter (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="373" width="1175.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="13.17" y="383.5" >Interpreter</text>
</g>
<g >
<title>intel_pmu_enable_all (848,018,294 samples, 0.03%)</title><rect x="1158.5" y="85" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1161.53" y="95.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (430,030,638 samples, 0.02%)</title><rect x="1157.3" y="229" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1160.32" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_thermal (764,013,981 samples, 0.03%)</title><rect x="798.5" y="277" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="801.51" y="287.5" ></text>
</g>
<g >
<title>call_stub (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="405" width="1175.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="13.17" y="415.5" >call_stub</text>
</g>
<g >
<title>StealTask::do_it (7,121,203,162 samples, 0.26%)</title><rect x="1186.4" y="469" width="3.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1189.36" y="479.5" ></text>
</g>
<g >
<title>C2Compiler::compile_method (274,127,264 samples, 0.01%)</title><rect x="1185.3" y="437" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1188.34" y="447.5" ></text>
</g>
<g >
<title>__sysvec_thermal (2,312,783,251 samples, 0.08%)</title><rect x="1159.6" y="245" width="0.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1162.56" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (243,256,469 samples, 0.01%)</title><rect x="1162.4" y="181" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1165.36" y="191.5" ></text>
</g>
<g >
<title>handle_softirqs (430,030,638 samples, 0.02%)</title><rect x="1157.3" y="213" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1160.32" y="223.5" ></text>
</g>
<g >
<title>VM_Thread (582,456,653 samples, 0.02%)</title><rect x="1189.8" y="533" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1192.75" y="543.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (256,309,565 samples, 0.01%)</title><rect x="1157.4" y="101" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1160.39" y="111.5" ></text>
</g>
<g >
<title>xhci_queue_intr_tx (453,086,802 samples, 0.02%)</title><rect x="1161.7" y="85" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1164.70" y="95.5" ></text>
</g>
<g >
<title>ClassLoaderDataGraph::oops_do (309,354,796 samples, 0.01%)</title><rect x="1186.2" y="453" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1189.21" y="463.5" ></text>
</g>
<g >
<title>xhci_ring_ep_doorbell (249,161,742 samples, 0.01%)</title><rect x="1157.4" y="37" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1160.39" y="47.5" ></text>
</g>
<g >
<title>xhci_queue_bulk_tx (449,529,057 samples, 0.02%)</title><rect x="1161.7" y="69" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1164.70" y="79.5" ></text>
</g>
<g >
<title>common_interrupt (1,228,978,910 samples, 0.04%)</title><rect x="1161.4" y="277" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1164.41" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,984,390,445 samples, 0.07%)</title><rect x="1186.4" y="437" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.39" y="447.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="485" width="1175.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="13.17" y="495.5" >JavaThread::thread_main_inner</text>
</g>
<g >
<title>__hrtimer_run_queues (1,201,232,609 samples, 0.04%)</title><rect x="797.9" y="213" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="800.87" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (272,541,821 samples, 0.01%)</title><rect x="10.0" y="469" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.01" y="479.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Compressor:::output (322,940,635,447 samples, 11.63%)</title><rect x="661.6" y="293" width="137.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="664.57" y="303.5" >Lspec/benchmarks/..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1,504,018,653 samples, 0.05%)</title><rect x="1159.9" y="165" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1162.85" y="175.5" ></text>
</g>
<g >
<title>start_thread (293,865,505 samples, 0.01%)</title><rect x="1185.3" y="517" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.34" y="527.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Compressor:::clBlock (2,164,955,150 samples, 0.08%)</title><rect x="660.6" y="293" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="663.65" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (342,821,683 samples, 0.01%)</title><rect x="1165.2" y="229" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1168.22" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,954,072,954 samples, 0.11%)</title><rect x="1157.9" y="181" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1160.87" y="191.5" ></text>
</g>
<g >
<title>StringTable::buckets_unlink_or_oops_do (248,390,441 samples, 0.01%)</title><rect x="1189.9" y="341" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.89" y="351.5" ></text>
</g>
<g >
<title>notify_hwp_interrupt (274,763,031 samples, 0.01%)</title><rect x="1166.2" y="229" width="0.1" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1169.17" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit (324,473,423 samples, 0.01%)</title><rect x="1165.6" y="261" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1168.64" y="271.5" ></text>
</g>
<g >
<title>irq_exit_rcu (430,030,638 samples, 0.02%)</title><rect x="1157.3" y="245" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1160.32" y="255.5" ></text>
</g>
<g >
<title>ScavengeRootsTask::do_it (351,072,598 samples, 0.01%)</title><rect x="1186.2" y="469" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1189.21" y="479.5" ></text>
</g>
<g >
<title>asm_common_interrupt (641,955,783 samples, 0.02%)</title><rect x="1157.2" y="277" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1160.24" y="287.5" ></text>
</g>
<g >
<title>tasklet_hi_action (811,376,137 samples, 0.03%)</title><rect x="1161.6" y="213" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1164.55" y="223.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (460,771,546 samples, 0.02%)</title><rect x="1161.7" y="101" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1164.70" y="111.5" ></text>
</g>
<g >
<title>scheduler_tick (5,150,013,230 samples, 0.19%)</title><rect x="1162.8" y="165" width="2.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1165.81" y="175.5" ></text>
</g>
<g >
<title>Lspec/benchmarks/compress/Compressor:::output (27,602,979,584 samples, 0.99%)</title><rect x="1167.7" y="309" width="11.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1170.69" y="319.5" ></text>
</g>
<g >
<title>tasklet_hi_action (419,916,062 samples, 0.02%)</title><rect x="1157.3" y="197" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1160.32" y="207.5" ></text>
</g>
<g >
<title>C2_CompilerThre (322,420,578 samples, 0.01%)</title><rect x="1185.3" y="533" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1188.33" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3,750,177,926 samples, 0.14%)</title><rect x="1157.7" y="245" width="1.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1160.66" y="255.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (460,771,546 samples, 0.02%)</title><rect x="1161.7" y="117" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1164.70" y="127.5" ></text>
</g>
<g >
<title>task_tick_fair (729,381,069 samples, 0.03%)</title><rect x="1164.6" y="149" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1167.62" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,323,420,941 samples, 0.30%)</title><rect x="1162.0" y="293" width="3.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1165.02" y="303.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="421" width="1175.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="431.5" >JavaCalls::call_helper</text>
</g>
<g >
<title>perf_event_task_tick (2,023,852,755 samples, 0.07%)</title><rect x="1158.0" y="133" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1161.04" y="143.5" ></text>
</g>
<g >
<title>xhci_ring_ep_doorbell (445,730,534 samples, 0.02%)</title><rect x="1161.7" y="53" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1164.70" y="63.5" ></text>
</g>
<g >
<title>java_start (2,764,270,298,336 samples, 99.59%)</title><rect x="10.2" y="501" width="1175.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.17" y="511.5" >java_start</text>
</g>
<g >
<title>pkg_thermal_notify (505,332,320 samples, 0.02%)</title><rect x="798.6" y="213" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="801.60" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (364,141,522 samples, 0.01%)</title><rect x="1165.2" y="245" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1168.22" y="255.5" ></text>
</g>
<g >
<title>usb_submit_urb (460,771,546 samples, 0.02%)</title><rect x="1161.7" y="133" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1164.70" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,689,128,308 samples, 0.10%)</title><rect x="1166.3" y="213" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1169.29" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_futex (252,798,877 samples, 0.01%)</title><rect x="10.0" y="437" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.02" y="447.5" ></text>
</g>
<g >
<title>native_write_msr (355,959,389 samples, 0.01%)</title><rect x="798.2" y="69" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="801.16" y="79.5" ></text>
</g>
<g >
<title>__sysvec_thermal (738,580,849 samples, 0.03%)</title><rect x="798.5" y="245" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="801.51" y="255.5" ></text>
</g>
<g >
<title>update_process_times (2,932,842,296 samples, 0.11%)</title><rect x="1157.9" y="165" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1160.88" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (276,130,793 samples, 0.01%)</title><rect x="10.0" y="485" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.01" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,069,403,002 samples, 0.04%)</title><rect x="797.9" y="197" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="800.93" y="207.5" ></text>
</g>
<g >
<title>[perf-129796.map] (2,764,012,470,451 samples, 99.58%)</title><rect x="10.2" y="325" width="1175.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="13.21" y="335.5" >[perf-129796.map]</text>
</g>
<g >
<title>ParallelScavengeHeap::failed_mem_allocate (336,018,425 samples, 0.01%)</title><rect x="1189.9" y="405" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1192.86" y="415.5" ></text>
</g>
<g >
<title>PSScavenge::invoke_no_policy (315,668,735 samples, 0.01%)</title><rect x="1189.9" y="373" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1192.87" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,415,198,548 samples, 0.16%)</title><rect x="1157.6" y="277" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1160.57" y="287.5" ></text>
</g>
<g >
<title>futex_wait (251,018,526 samples, 0.01%)</title><rect x="10.0" y="405" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="13.02" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (5,807,337,728 samples, 0.21%)</title><rect x="1162.6" y="213" width="2.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1165.56" y="223.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (306,680,042 samples, 0.01%)</title><rect x="1165.6" y="245" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1168.64" y="255.5" ></text>
</g>
<g >
<title>java_start (557,827,057 samples, 0.02%)</title><rect x="1189.8" y="501" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1192.76" y="511.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (761,507,489 samples, 0.03%)</title><rect x="1161.6" y="165" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1164.57" y="175.5" ></text>
</g>
<g >
<title>pkg_thermal_notify (2,884,576,447 samples, 0.10%)</title><rect x="1166.3" y="229" width="1.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1169.28" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,591,030,842 samples, 0.24%)</title><rect x="1162.2" y="229" width="2.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1165.23" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_thermal (2,385,501,054 samples, 0.09%)</title><rect x="1159.5" y="277" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1162.54" y="287.5" ></text>
</g>
<g >
<title>VMThread::loop (557,827,057 samples, 0.02%)</title><rect x="1189.8" y="469" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1192.76" y="479.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2,645,619,629 samples, 0.10%)</title><rect x="1166.3" y="181" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1169.31" y="191.5" ></text>
</g>
<g >
<title>sysvec_thermal (753,688,812 samples, 0.03%)</title><rect x="798.5" y="261" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="801.51" y="271.5" ></text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (419,916,062 samples, 0.02%)</title><rect x="1157.3" y="181" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1160.32" y="191.5" ></text>
</g>
<g >
<title>JavaThread::oops_do (697,463,481 samples, 0.03%)</title><rect x="1189.4" y="453" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.40" y="463.5" ></text>
</g>
<g >
<title>native_read_msr (657,859,430 samples, 0.02%)</title><rect x="1165.8" y="229" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1168.81" y="239.5" ></text>
</g>
<g >
<title>__sysvec_thermal (4,153,667,902 samples, 0.15%)</title><rect x="1165.8" y="261" width="1.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1168.80" y="271.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (447,733,712 samples, 0.02%)</title><rect x="798.6" y="181" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="801.60" y="191.5" ></text>
</g>
<g >
<title>arrayof_jint_fill (344,575,260 samples, 0.01%)</title><rect x="1161.3" y="293" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1164.26" y="303.5" ></text>
</g>
<g >
<title>java_start (9,520,902,519 samples, 0.34%)</title><rect x="1185.7" y="501" width="4.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1188.68" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,535,665,086 samples, 0.06%)</title><rect x="797.8" y="277" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="800.82" y="287.5" ></text>
</g>
<g >
<title>Compile::Compile (274,127,264 samples, 0.01%)</title><rect x="1185.3" y="421" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1188.34" y="431.5" ></text>
</g>
<g >
<title>update_process_times (1,040,585,946 samples, 0.04%)</title><rect x="797.9" y="165" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="800.94" y="175.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (1,177,912,674 samples, 0.04%)</title><rect x="1160.7" y="261" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1163.74" y="271.5" ></text>
</g>
<g >
<title>VMThread::evaluate_operation (336,018,425 samples, 0.01%)</title><rect x="1189.9" y="453" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.86" y="463.5" ></text>
</g>
<g >
<title>GC_task_thread# (10,007,769,647 samples, 0.36%)</title><rect x="1185.5" y="533" width="4.2" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1188.47" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3,714,526,863 samples, 0.13%)</title><rect x="1157.7" y="229" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1160.67" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_enable (855,672,806 samples, 0.03%)</title><rect x="1158.5" y="101" width="0.4" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1161.53" y="111.5" ></text>
</g>
<g >
<title>sysvec_thermal (2,334,293,850 samples, 0.08%)</title><rect x="1159.6" y="261" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1162.56" y="271.5" ></text>
</g>
</g>
</svg>
